---
import { getCollection, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import CategoryPill from '@components/ui/CategoryPill.astro';
import Date from '@components/ui/Date.astro';
import { Image } from 'astro:assets';
import Subscription from '../../components/sections/Subscription.astro';

// Objeto por defecto para la sección de suscripción
const styleGuideSection = {
  eyebrow: "Síguenos",
  headline: "Suscríbete al Newsletter",
  description: "Mantente informado sobre ciberseguridad, NERC-CIP, IA generativa, innovación tecnológica y mejores prácticas para industrias críticas.",
  newsLetterForm: [
    {
      title: "¡Recibe nuestras actualizaciones periódicas!",
      description: "Entérate antes que nadie sobre nuevas regulaciones, casos de uso de IA generativa, herramientas de automatización y tendencias tecnológicas clave para tu empresa.",
      successTitle: "¡Suscripción exitosa!",
      successMessage: "Gracias por unirte. Revisa tu bandeja de entrada para comenzar a recibir nuestros contenidos exclusivos.",
      buttonText: "Suscribirme",
      fileDownload: ""
    }
  ],
};

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        //params: { slug: [post.id] },
        props: { post },
    }));
}



let slugParam = Astro.params.slug;
if (Array.isArray(slugParam)) {
  slugParam = slugParam.join('/');
}

// Encuentra el post correspondiente
const posts = await getCollection('blog');
const post = posts.find((p) => p.id === slugParam);

//const { post } = Astro.props;

if (!post) {
   throw new Error('Post no encontrado'); // Puedes personalizar este mensaje o mostrar un componente 404
 }
const { Content } = await render(post);

// Use SEO data from frontmatter if available, fallback to regular post data
const seoTitle = post.data.seo?.title || post.data.title;
const seoDescription = post.data.seo?.description || post.data.excerpt;

// For SEO image, use the seo.image if provided, otherwise use the featured image
// The Layout component expects a string for the image, so we need to handle that
let seoImage: string | undefined = post.data.seo?.image;

// If seoImage is provided but not an absolute URL, make it absolute
if (seoImage && !seoImage.startsWith('http')) {
    const siteUrl = import.meta.env.SITE || 'https://www.codevsys.cl';
    seoImage = new URL(seoImage.startsWith('/') ? seoImage : `/${seoImage}`, siteUrl).toString();
}
// If no SEO image is specified, but we have a featured image, use its URL
else if (!seoImage && post.data.featuredImage) {
    // For Astro image objects, we need to create an absolute URL
    const siteUrl = import.meta.env.SITE || 'https://www.codevsys.cl';
    seoImage = new URL(post.data.featuredImage.src, siteUrl).toString();
}

// Lógica para la sección de suscripción
// Tipado explícito para evitar errores de lint
interface BlogFrontmatter {
  title: string;
  excerpt: string;
  featuredImage?: any;
  publishDate: Date;
  publish?: boolean;
  categories: string[];
  seo?: {
    title?: string;
    description?: string;
    image?: string;
  };
  showSubscription?: boolean;
  subscriptionContent?: any;
}

const typedPost = post as typeof post & { data: BlogFrontmatter };
const showSubscription = !!typedPost.data.showSubscription;
const subscriptionContent = typedPost.data.subscriptionContent || styleGuideSection;
---

<Layout title={seoTitle} description={seoDescription} image={seoImage}>
    <div class="w-full h-120 absolute top-0 left-0 z-0 overflow-hidden border-b border-black">
        {
            post.data.featuredImage && (
                <>
                    <Image
                        src={post.data.featuredImage}
                        alt=""
                        width={1920}
                        height={1080}
                        class="w-full h-full object-cover grayscale opacity-20"
                        quality={60}
                    />
                    <div class="absolute inset-0 bg-primary/10 backdrop-blur-md" />
                </>
            )
        }
    </div>

    <article class="site-container--small mx-auto px-4 prose relative z-10 pb-base">
        <div class="mt-42 mb-12 text-center">
            <h1>{post.data.title}</h1>
            <div class="flex items-center justify-center gap-4 text-gray-600">
                <Date date={post.data.publishDate} />
                {
                    post.data.categories && (
                        <div class="flex flex-wrap gap-2">
                            {post.data.categories.map((category) => (
                                <CategoryPill category={category} />
                            ))}
                        </div>
                    )
                }
            </div>
        </div>

        {
            post.data.featuredImage && (
                <Image
                    src={post.data.featuredImage}
                    alt=""
                    width={1200}
                    height={675}
                    class="w-full h-auto rounded-lg border mb-12 border-black"
                    quality={80}
                    format="webp"
                />
            )
        }

        <div class="mt-8">
            <Content />
        </div>
    </article>

    {showSubscription && (
      <Subscription
        content={subscriptionContent}
        imagePosition="right"
        background="light"
        padding="base"
      />
    )}
</Layout>
