---
import Button from '@components/ui/Button.astro';
import Eyebrow from '@components/ui/Eyebrow.astro';
import { getPaddingClass, getBackgroundColor, getTextColor } from '@utils/styleUtils';
import NewsletterForm from '@components/forms/NewsletterForm.astro';
import type { PaddingSize, ThemeColor } from '@utils/styleUtils';
import { Image } from 'astro:assets';

interface Content {
    eyebrow?: string;
    headline: string;
    subheadline?: string;
    description?: string;
    buttons?: {
        text: string;
        link: string;
        variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        target?: string;
    }[],
    newsLetterForm?: {
        title: string;
        description: string;
        successTitle: string;
        successMessage: string;
        fileDownload?: string;
        buttonText: string;
    }[];
    image?: string;
    imageAlt?: string;
}

export interface Props {
    content: Content;
    // Layout props
    imagePosition?: 'left' | 'right';
    background?: ThemeColor;
    paddingTop?: PaddingSize;
    paddingBottom?: PaddingSize;
    padding?: PaddingSize;
}

const {
    content,
    // Layout props
    imagePosition = 'right',
    background = 'base',
    paddingTop,
    paddingBottom,
    padding,
} = Astro.props;

const { eyebrow, headline, subheadline, description, buttons = [], newsLetterForm = [] } = content;


const paddingClass = getPaddingClass({ padding, paddingTop, paddingBottom });
const bgColor = getBackgroundColor(background);
const textColor = getTextColor(background);
---

<section id="subscription" class:list={['relative', bgColor, paddingClass]}>
    <div class="site-container px-4">
        <div
            class:list={[
                'grid gap-16 items-center',
                'md:grid-cols-2',
                imagePosition === 'left' ? 'md:grid-cols-[1fr_1fr]' : '',
            ]}
        >
            {/* NewsletterForm Side */}
            {
                imagePosition === 'left' && (
                    <NewsletterForm content={newsLetterForm[0]} background="light" padding="base" />
                )
            }

            {/* Content Side */}
            <div class:list={[textColor]}>
                {eyebrow && <Eyebrow text={eyebrow} background={background} />}
                <h2 class={textColor + " mb-2"} data-aos="fade-up">{headline}</h2>
                {content.image && description && (
                  <div class="flex items-start gap-4 mb-4">
                    <Image
                      src={content.image}
                      alt={content.imageAlt || ''}
                      class="w-full max-w-[180px] rounded-lg shadow border"
                      width={180}
                      height={180}
                      fit="cover"
                    />
                    <p class="text-base opacity-90 mt-0" data-aos="fade-up">{description}</p>
                  </div>
                )}
                {content.image && !description && (
                  <Image
                    src={content.image}
                    alt={content.imageAlt || ''}
                    class="mb-4 w-full max-w-[180px] rounded-lg shadow border"
                    width={180}
                    height={180}
                    fit="cover"
                  />
                )}
                {!content.image && description && (
                  <p class="mt-2 text-base opacity-90" data-aos="fade-up">{description}</p>
                )}
                {
                    buttons.length > 0 && (
                        <div class="flex flex-wrap gap-4 mt-8" data-aos="fade-up">
                            {buttons.map((button) => (
                                <Button
                                    href={button.link}
                                    target={button.target || '_self'}
                                    variant={button.variant || 'primary'}
                                >
                                    {button.text}
                                </Button>
                            ))}
                        </div>
                    )
                }
            </div>

            {/* NewsletterForm Side (right position) */}
            {
                imagePosition === 'right' && (
                    <NewsletterForm content={newsLetterForm[0]} background="light" padding="base" />
                )
            }
        </div>
    </div>
</section>
