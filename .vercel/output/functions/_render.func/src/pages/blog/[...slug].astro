---
import { getCollection, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import CategoryPill from '@components/ui/CategoryPill.astro';
import Date from '@components/ui/Date.astro';
import DateDisplay from '@components/ui/Date.astro';
import { Image } from 'astro:assets';
import Subscription from '../../components/sections/Subscription.astro';
import Button from '@components/ui/Button.astro';

// Objeto por defecto para la sección de suscripción
const styleGuideSection = {
  eyebrow: "Síguenos",
  headline: "Suscríbete al Newsletter",
  description: "Mantente informado sobre ciberseguridad, NERC-CIP, IA generativa, innovación tecnológica y mejores prácticas para industrias críticas.",
  newsLetterForm: [
    {
      title: "¡Recibe nuestras actualizaciones periódicas!",
      description: "Entérate antes que nadie sobre nuevas regulaciones, casos de uso de IA generativa, herramientas de automatización y tendencias tecnológicas clave para tu empresa.",
      successTitle: "¡Suscripción exitosa!",
      successMessage: "Gracias por unirte. Revisa tu bandeja de entrada para comenzar a recibir nuestros contenidos exclusivos.",
      buttonText: "Suscribirme",
      fileDownload: ""
    }
  ],
};

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        props: { post },
    }));
}

let slugParam = Astro.params.slug;
if (Array.isArray(slugParam)) {
  slugParam = slugParam.join('/');
}

// Encuentra el post correspondiente
const posts = await getCollection('blog');
const post = posts.find((p) => p.id === slugParam);

if (!post) {
   throw new Error('Post no encontrado');
}
const { Content } = await render(post);

   // Lógica para obtener posts anterior y siguiente
   const allPublishedPosts = (await getCollection('blog'))
     .filter(p => p.data.publish === true) // Solo posts explícitamente publicados
     //.sort((a, b) => new Date(b.data.publishDate).valueOf() - new Date(a.data.publishDate).valueOf()); // Nuevos primero
     .sort((a, b) => new globalThis.Date(b.data.publishDate).valueOf() - new globalThis.Date(a.data.publishDate).valueOf());

   const currentIndex = allPublishedPosts.findIndex(p => p.id === post.id);

   // "nextChronologicalPost" es el más reciente en la cronología (anterior en la lista ordenada descendentemente)
   const nextChronologicalPost = currentIndex > 0 ? allPublishedPosts[currentIndex - 1] : null;
   // "prevChronologicalPost" es el más antiguo en la cronología (siguiente en la lista ordenada descendentemente)
   const prevChronologicalPost = currentIndex < allPublishedPosts.length - 1 ? allPublishedPosts[currentIndex + 1] : null;

// Use SEO data from frontmatter if available, fallback to regular post data
const seoTitle = post.data.seo?.title || post.data.title;
const seoDescription = post.data.seo?.description || post.data.excerpt;

// For SEO image, use the seo.image if provided, otherwise use the featured image
let seoImage: string | undefined = post.data.seo?.image;

// If seoImage is provided but not an absolute URL, make it absolute
if (seoImage && !seoImage.startsWith('http')) {
    const siteUrl = import.meta.env.SITE || 'https://www.codevsys.cl';
    seoImage = new URL(seoImage.startsWith('/') ? seoImage : `/${seoImage}`, siteUrl).toString();
}
// If no SEO image is specified, but we have a featured image, use its URL
else if (!seoImage && post.data.featuredImage) {
    // For Astro image objects, we need to create an absolute URL
    const siteUrl = import.meta.env.SITE || 'https://www.codevsys.cl';
    seoImage = new URL(post.data.featuredImage.src, siteUrl).toString();
}

// Lógica para la sección de suscripción y CTA del folleto.
// Se confía en el tipado de post.data inferido de src/content.config.ts
const showSubscription = !!post.data.showSubscription;
const subscriptionContent = post.data.subscriptionContent || styleGuideSection;

const showBrochure = post.data.showBrochure === true;
const brochureText = post.data.brochureText;
const brochureButtonText = post.data.brochureButtonText || "Descargar";
const brochureLink = post.data.brochureLink || "#subscription";

---

<Layout title={seoTitle} description={seoDescription} image={seoImage} jsonLdString={post.data.jsonLdString}>
    <div class="w-full h-120 absolute top-0 left-0 z-0 overflow-hidden border-b border-black">
        {
            post.data.featuredImage && (
                <>
                    <Image
                        src={post.data.featuredImage}
                        alt=""
                        width={1920}
                        height={1080}
                        class="w-full h-full object-cover grayscale opacity-20"
                        quality={60}
                    />
                    <div class="absolute inset-0 bg-primary/10 backdrop-blur-md" />
                </>
            )
        }
    </div>

    <article class="site-container--small mx-auto px-4 prose relative z-10 pb-base">
        <div class="mt-42 mb-12 text-center">
            <h1>{post.data.title}</h1>
            <div class="flex items-center justify-center gap-4 text-gray-600">
                <DateDisplay date={post.data.publishDate} />
                {
                    post.data.categories && (
                        <div class="flex flex-wrap gap-2">
                            {post.data.categories.map((category) => (
                                <CategoryPill category={category} />
                            ))}
                        </div>
                    )
                }
            </div>
        </div>

        {showBrochure && brochureText && (
            <section class="py-8 md:py-12 bg-surface-light border-t border-b border-black/10">
                <div class="site-container--small">
                    <div class="bg-white dark:bg-surface-dark p-6 md:p-8 rounded-lg shadow-xl border border-black/15 text-center">
                        <p class="text-xl md:text-2xl font-semibold mb-6 text-text">
                            {brochureText}
                        </p>
                        <Button
                            href={brochureLink}
                            variant="accent"
                            size="lg"
                            class="glow-button mx-auto"
                        >
                            {brochureButtonText}
                        </Button>
                    </div>
                </div>
            </section>
        )}

        {
            post.data.featuredImage && (
                <Image
                    src={post.data.featuredImage}
                    alt=""
                    width={1200}
                    height={675}
                    class="w-full max-w-4xl mx-auto h-auto rounded-lg border mb-12 border-black"
                    quality={80}
                    format="webp"
                />
            )
        }



        <div class="mt-8">
            <Content />
        </div>
    </article>

   {/* Post Navigation */}
   {(prevChronologicalPost || nextChronologicalPost) && (
    <nav class="site-container--small mx-auto px-4 mt-12 py-8 border-t border-black/10 flex flex-col md:flex-row justify-between items-center gap-6">
        <div class="w-full md:w-1/2 text-left">
            {prevChronologicalPost && (
                <a href={`/blog/${prevChronologicalPost.id}/`} class="block p-4 border border-gray-300 dark:border-gray-700 rounded-lg hover:border-accent dark:hover:border-accent group transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2 dark:focus:ring-offset-surface-dark">
                    <span class="text-xs text-gray-500 dark:text-gray-400 block mb-1">&larr; Artículo Anterior</span>
                    <span class="font-semibold text-lg text-text dark:text-text-dark group-hover:text-accent dark:group-hover:text-accent transition-colors duration-200">{prevChronologicalPost.data.title}</span>
                </a>
            )}
        </div>
        <div class="w-full md:w-1/2 text-right">
            {nextChronologicalPost && (
                <a href={`/blog/${nextChronologicalPost.id}/`} class="block p-4 border border-gray-300 dark:border-gray-700 rounded-lg hover:border-accent dark:hover:border-accent group transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2 dark:focus:ring-offset-surface-dark">
                    <span class="text-xs text-gray-500 dark:text-gray-400 block mb-1">Siguiente Artículo &rarr;</span>
                    <span class="font-semibold text-lg text-text dark:text-text-dark group-hover:text-accent dark:group-hover:text-accent transition-colors duration-200">{nextChronologicalPost.data.title}</span>
                </a>
            )}
        </div>
    </nav>
)}

    {showSubscription && (
      <Subscription
        content={subscriptionContent}
        imagePosition="right"
        background="light"
        padding="base"
      />
    )}
</Layout>
